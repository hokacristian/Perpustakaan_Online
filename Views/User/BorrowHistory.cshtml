@model List<Perpustakaan_Online.Models.BorrowingTransaction>
@{
    ViewData["Title"] = "Riwayat Peminjaman";
}

<div class="container">
    <div class="row mb-4">
        <div class="col-md-8">
            <h2 class="fw-bold">
                <i class="bi bi-clock-history me-2 text-info"></i>
                Riwayat Peminjaman
            </h2>
            <p class="text-muted">Lihat semua riwayat peminjaman buku Anda</p>
        </div>
        <div class="col-md-4 text-md-end">
            <a asp-action="Books" class="btn btn-primary">
                <i class="bi bi-book me-1"></i>
                Pinjam Buku Lagi
            </a>
        </div>
    </div>

    <!-- Quick Stats -->
    <div class="row mb-4">
        <div class="col-lg-3 col-md-6 mb-3">
            <div class="card border-0 bg-primary text-white">
                <div class="card-body text-center">
                    <i class="bi bi-bookmark-fill display-6 mb-2"></i>
                    <h6>Sedang Dipinjam</h6>
                    <h4>@Model.Count(t => t.Status == "Borrowed")</h4>
                </div>
            </div>
        </div>
        <div class="col-lg-3 col-md-6 mb-3">
            <div class="card border-0 bg-success text-white">
                <div class="card-body text-center">
                    <i class="bi bi-check-circle-fill display-6 mb-2"></i>
                    <h6>Dikembalikan</h6>
                    <h4>@Model.Count(t => t.Status == "Returned")</h4>
                </div>
            </div>
        </div>
        <div class="col-lg-3 col-md-6 mb-3">
            <div class="card border-0 bg-warning text-white">
                <div class="card-body text-center">
                    <i class="bi bi-exclamation-triangle-fill display-6 mb-2"></i>
                    <h6>Terlambat</h6>
                    <h4>@Model.Count(t => t.IsOverdue)</h4>
                </div>
            </div>
        </div>
        <div class="col-lg-3 col-md-6 mb-3">
            <div class="card border-0 bg-info text-white">
                <div class="card-body text-center">
                    <i class="bi bi-list-ul display-6 mb-2"></i>
                    <h6>Total Transaksi</h6>
                    <h4>@Model.Count</h4>
                </div>
            </div>
        </div>
    </div>

    <!-- History Table -->
    <div class="card border-0 shadow-sm">
        <div class="card-header bg-light">
            <h5 class="mb-0">
                <i class="bi bi-table me-2"></i>Daftar Riwayat Peminjaman
            </h5>
        </div>
        <div class="card-body">
            @if (Model != null && Model.Any())
            {
                <div class="table-responsive">
                    <table class="table table-hover">
                        <thead class="table-light">
                            <tr>
                                <th>Buku</th>
                                <th>Tanggal Pinjam</th>
                                <th>Jatuh Tempo</th>
                                <th>Tanggal Kembali</th>
                                <th>Status</th>
                                <th>Durasi</th>
                            </tr>
                        </thead>
                        <tbody>
                            @foreach (var transaction in Model.OrderByDescending(t => t.BorrowDate))
                            {
                                <tr class="@(transaction.IsOverdue && transaction.Status == "Borrowed" ? "table-warning" : "")">
                                    <td>
                                        <div>
                                            <strong>@(transaction.Book?.Title ?? "Buku Tidak Diketahui")</strong>
                                            <br>
                                            <small class="text-muted">
                                                <i class="bi bi-person me-1"></i>@(transaction.Book?.Author ?? "Penulis Tidak Diketahui")
                                            </small>
                                            <br>
                                            <span class="badge bg-secondary">@(transaction.Book?.Category?.Name ?? "Kategori Tidak Diketahui")</span>
                                        </div>
                                    </td>
                                    <td>
                                        <span class="text-muted">@transaction.BorrowDate.ToString("dd/MM/yyyy")</span>
                                        <br>
                                        <small class="text-muted">@transaction.BorrowDate.ToString("HH:mm")</small>
                                    </td>
                                    <td>
                                        <span class="@(transaction.IsOverdue && transaction.Status == "Borrowed" ? "text-danger fw-bold" : "text-muted")">
                                            @transaction.DueDate.ToString("dd/MM/yyyy")
                                        </span>
                                    </td>
                                    <td>
                                        @if (transaction.ReturnDate.HasValue)
                                        {
                                            <span class="text-success">@transaction.ReturnDate.Value.ToString("dd/MM/yyyy")</span>
                                            <br>
                                            <small class="text-muted">@transaction.ReturnDate.Value.ToString("HH:mm")</small>
                                        }
                                        else
                                        {
                                            <span class="text-muted">-</span>
                                        }
                                    </td>
                                    <td>
                                        @if (transaction.Status == "Borrowed")
                                        {
                                            if (transaction.IsOverdue)
                                            {
                                                <span class="badge bg-danger">
                                                    <i class="bi bi-exclamation-triangle me-1"></i>
                                                    Terlambat @transaction.DaysOverdue hari
                                                </span>
                                            }
                                            else
                                            {
                                                var daysLeft = (transaction.DueDate - DateTime.UtcNow).Days;
                                                <span class="badge bg-info">
                                                    <i class="bi bi-clock me-1"></i>
                                                    @daysLeft hari lagi
                                                </span>
                                            }
                                        }
                                        else if (transaction.Status == "Returned")
                                        {
                                            <span class="badge bg-success">
                                                <i class="bi bi-check-circle me-1"></i>
                                                Dikembalikan
                                            </span>
                                        }
                                        else
                                        {
                                            <span class="badge bg-secondary">@transaction.Status</span>
                                        }
                                    </td>
                                    <td>
                                        @if (transaction.ReturnDate.HasValue)
                                        {
                                            var borrowDays = (transaction.ReturnDate.Value - transaction.BorrowDate).Days;
                                            <span class="text-muted">@borrowDays hari</span>
                                            @if (transaction.ReturnDate.Value > transaction.DueDate)
                                            {
                                                <br>
                                                <small class="text-danger">
                                                    <i class="bi bi-exclamation-circle me-1"></i>
                                                    Terlambat @((transaction.ReturnDate.Value - transaction.DueDate).Days) hari
                                                </small>
                                            }
                                        }
                                        else if (transaction.Status == "Borrowed")
                                        {
                                            var currentDays = (DateTime.UtcNow - transaction.BorrowDate).Days;
                                            <span class="text-info">@currentDays hari</span>
                                            <br>
                                            <small class="text-muted">Sedang dipinjam</small>
                                        }
                                    </td>
                                </tr>
                            }
                        </tbody>
                    </table>
                </div>
            }
            else
            {
                <div class="text-center py-5">
                    <i class="bi bi-journal-x display-1 text-muted"></i>
                    <h5 class="text-muted mt-3">Belum ada riwayat peminjaman</h5>
                    <p class="text-muted">Anda belum pernah meminjam buku. Mulai jelajahi katalog buku kami!</p>
                    <a asp-action="Books" class="btn btn-primary">
                        <i class="bi bi-book me-1"></i>
                        Lihat Katalog Buku
                    </a>
                </div>
            }
        </div>
    </div>

    @if (Model != null && Model.Any() && Model.Any(t => t.Status == "Borrowed"))
    {
        <!-- Active Borrowings Alert -->
        <div class="alert alert-info border-0 shadow-sm mt-4" role="alert">
            <div class="d-flex align-items-center">
                <i class="bi bi-info-circle-fill me-3 fs-4"></i>
                <div>
                    <h6 class="alert-heading mb-1">Informasi Peminjaman Aktif</h6>
                    <p class="mb-0">
                        Anda memiliki @Model.Count(t => t.Status == "Borrowed") buku yang sedang dipinjam.
                        Pastikan mengembalikan sebelum jatuh tempo untuk menghindari denda.
                    </p>
                </div>
            </div>
        </div>
    }

    @if (Model != null && Model.Any() && Model.Any(t => t.IsOverdue && t.Status == "Borrowed"))
    {
        <!-- Overdue Warning -->
        <div class="alert alert-warning border-0 shadow-sm mt-4" role="alert">
            <div class="d-flex align-items-center">
                <i class="bi bi-exclamation-triangle-fill me-3 fs-4"></i>
                <div>
                    <h6 class="alert-heading mb-1">Peringatan Keterlambatan</h6>
                    <p class="mb-0">
                        Anda memiliki @Model.Count(t => t.IsOverdue && t.Status == "Borrowed") buku yang terlambat dikembalikan.
                        Segera hubungi pustakawan untuk menghindari denda tambahan.
                    </p>
                </div>
            </div>
        </div>
    }
</div>